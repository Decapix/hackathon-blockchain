{
  "_from": "@walletconnect/heartbeat@1.2.2",
  "_id": "@walletconnect/heartbeat@1.2.2",
  "_inBundle": false,
  "_integrity": "sha512-uASiRmC5MwhuRuf05vq4AT48Pq8RMi876zV8rr8cV969uTOzWdB/k+Lj5yI2PBtB1bGQisGen7MM1GcZlQTBXw==",
  "_location": "/@walletconnect/heartbeat",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@walletconnect/heartbeat@1.2.2",
    "name": "@walletconnect/heartbeat",
    "escapedName": "@walletconnect%2fheartbeat",
    "scope": "@walletconnect",
    "rawSpec": "1.2.2",
    "saveSpec": null,
    "fetchSpec": "1.2.2"
  },
  "_requiredBy": [
    "/@walletconnect/core",
    "/@walletconnect/sign-client",
    "/@walletconnect/types"
  ],
  "_resolved": "https://registry.npmjs.org/@walletconnect/heartbeat/-/heartbeat-1.2.2.tgz",
  "_shasum": "e8dc5179db7769950c6f9cf59b23516d9b95227d",
  "_spec": "@walletconnect/heartbeat@1.2.2",
  "_where": "/home/felix/hackathon-blockchain/web3auth-g/node_modules/@walletconnect/sign-client",
  "author": {
    "name": "WalletConnect, Inc.",
    "email": "walletconnect.com"
  },
  "browser": "dist/index.es.js",
  "bugs": {
    "url": "https://github.com/walletconnect/walletconnect-utils/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@walletconnect/events": "^1.0.1",
    "@walletconnect/time": "^1.0.2",
    "events": "^3.3.0"
  },
  "deprecated": false,
  "description": "HeartBeat",
  "devDependencies": {
    "@types/jest": "^26.0.15",
    "@types/node": "^14.14.7",
    "webpack": "^4.41.6",
    "webpack-cli": "^3.3.11"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/walletconnect/walletconnect-utils",
  "keywords": [
    "time",
    "timestamp",
    "test",
    "testing",
    "label",
    "unit testing"
  ],
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.es.js",
  "name": "@walletconnect/heartbeat",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/walletconnect/walletconnect-utils.git"
  },
  "scripts": {
    "build": "npm run build:pre && npm run build:source && npm run build:types",
    "build:pre": "npm run clean",
    "build:source": "rollup --config rollup.config.js",
    "build:types": "tsc",
    "clean": "rm -rf dist",
    "format": "prettier --config ../../.prettierrc --write {src,test}/**/*.ts",
    "lint": "eslint -c '../../.eslintrc' --fix './src/**/*.ts'",
    "npm-publish:canary": "npm publish --access public --tag canary",
    "npm-publish:latest": "npm publish --access public --tag latest",
    "prepublishOnly": "npm run test && npm run build",
    "prettier": "prettier --config ../../.prettierrc --check {src,test}/**/*.ts",
    "start": "tsdx watch",
    "test": "env TS_NODE_PROJECT=\"tsconfig.cjs.json\" mocha --timeout 5000 --exit -r ts-node/register ./test/**/*.test.ts"
  },
  "types": "dist/types/index.d.ts",
  "unpkg": "dist/index.umd.js",
  "version": "1.2.2"
}
